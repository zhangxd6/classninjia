services:
 db:
   image: postgres
   restart: always
   ports:
     - 5432:5432
   environment:
     POSTGRES_PASSWORD: example
   volumes:
     - postgres-data:/var/lib/postgresql/data

 web:
   build:
     context: ./web
     dockerfile: ./Dockerfile
   ports:
     - 5000:80
   labels:
    - "traefik.http.routers.web.rule=PathPrefix(`/`)"
 account:
   environment:
   - ASPNETCORE_ENVIRONMENT=Development
   build:
     context: ./account
     dockerfile: ./Dockerfile
   ports:
     - 5001:80
   labels:
    - "traefik.http.routers.account.rule=PathPrefix(`/accounts`)"
   depends_on:
     - db
 course:
   environment:
   - ASPNETCORE_ENVIRONMENT=Development
   build:
     context: ./course
     dockerfile: ./Dockerfile
   ports:
     - 5002:80
   labels:
    - "traefik.http.routers.course.rule=PathPrefix(`/courses`)"
   depends_on:
     - db
 ## apigateway/reverse proxy
 reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.8
    # Enables the web UI and tells Traefik to listen to docker
    command:
            - --providers.docker
            # - --log.level=DEBUG
            # - --accesslog
            - --api.dashboard=true
            - --api.insecure=true 
    ports:
      # The HTTP port
      - "8088:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8090:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
 ## helper containers
 adminer:
   image: adminer
   restart: always
   ports:
     - 8080:8080
volumes:
 postgres-data:

